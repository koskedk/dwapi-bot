// <auto-generated />
using System;
using Dwapi.Bot.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dwapi.Bot.Infrastructure.Migrations
{
    [DbContext(typeof(BotContext))]
    partial class BotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Dwapi.Bot.Core.Domain.Indices.PatientIndex", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FacilityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FacilityName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientID")
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientPk")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Serial")
                        .HasColumnType("TEXT");

                    b.Property<int>("SiteCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("dmFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("dmLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("dmMiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("dmPKValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("dmPKValueDoB")
                        .HasColumnType("TEXT");

                    b.Property<string>("sxFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("sxLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("sxMiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("sxPKValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("sxPKValueDoB")
                        .HasColumnType("TEXT");

                    b.Property<string>("sxdmPKValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("sxdmPKValueDoB")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PatientIndices");
                });

            modelBuilder.Entity("Dwapi.Bot.Core.Domain.Indices.PatientIndexInterSiteScore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PatientIndexId1")
                        .HasColumnType("TEXT");

                    b.Property<double>("Rank")
                        .HasColumnType("REAL");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<Guid>("Session")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientIndexId1");

                    b.ToTable("InterSiteScores");
                });

            modelBuilder.Entity("Dwapi.Bot.Core.Domain.Indices.PatientIndexSiteScore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PatientIndexId1")
                        .HasColumnType("TEXT");

                    b.Property<double>("Rank")
                        .HasColumnType("REAL");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<Guid>("Session")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientIndexId1");

                    b.ToTable("SiteScores");
                });

            modelBuilder.Entity("Dwapi.Bot.Core.Domain.Indices.PatientIndexInterSiteScore", b =>
                {
                    b.HasOne("Dwapi.Bot.Core.Domain.Indices.PatientIndex", null)
                        .WithMany("InterSiteScores")
                        .HasForeignKey("PatientIndexId1");
                });

            modelBuilder.Entity("Dwapi.Bot.Core.Domain.Indices.PatientIndexSiteScore", b =>
                {
                    b.HasOne("Dwapi.Bot.Core.Domain.Indices.PatientIndex", null)
                        .WithMany("SiteScores")
                        .HasForeignKey("PatientIndexId1");
                });
#pragma warning restore 612, 618
        }
    }
}
